description = "Spring TestContext Framework"

apply plugin: "kotlin"

dependencies {
	compile(project(":spring-core"))
	optional(project(":spring-aop"))
	optional(project(":spring-beans"))
	optional(project(":spring-context"))
	optional(project(":spring-jdbc"))
	optional(project(":spring-orm"))
	optional(project(":spring-tx"))
	optional(project(":spring-web"))
	optional(project(":spring-webflux"))
	optional(project(":spring-webmvc"))
	optional(project(":spring-websocket"))
	optional("javax.activation:javax.activation-api")
	optional("javax.el:javax.el-api")
	optional("javax.inject:javax.inject")
	optional("javax.servlet:javax.servlet-api")
	optional("javax.servlet.jsp:javax.servlet.jsp-api")
	optional("javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api")
	optional("javax.xml.bind:jaxb-api")
	optional("javax.websocket:javax.websocket-api")
	optional("junit:junit")
	optional("org.junit.jupiter:junit-jupiter-api")
	optional("org.testng:testng")
	optional("org.aspectj:aspectjweaver")
	optional("org.codehaus.groovy:groovy")
	optional("org.hamcrest:hamcrest")
	optional("org.apache.taglibs:taglibs-standard-jstlel") {
		exclude group: "org.apache.taglibs", module: "taglibs-standard-spec"
	}
	optional("net.sourceforge.htmlunit:htmlunit") {
		exclude group: "commons-logging", module: "commons-logging"
	}
	optional("org.seleniumhq.selenium:htmlunit-driver") {
		exclude group: "commons-logging", module: "commons-logging"
	}
	optional("org.seleniumhq.selenium:selenium-java") {
		exclude group: "commons-logging", module: "commons-logging"
		exclude group: "io.netty", module: "netty"
	}
	optional("org.xmlunit:xmlunit-matchers")
	optional("org.skyscreamer:jsonassert")
	optional("com.jayway.jsonpath:json-path")
	optional("org.jetbrains.kotlin:kotlin-reflect")
	optional("org.jetbrains.kotlin:kotlin-stdlib")
	optional("io.projectreactor:reactor-test")
	testCompile(project(":spring-context-support"))
	testCompile(project(":spring-oxm"))
	testCompile("javax.annotation:javax.annotation-api")
	testCompile("javax.cache:cache-api")
	testCompile("javax.ejb:javax.ejb-api")
	testCompile("javax.interceptor:javax.interceptor-api")
	testCompile("javax.mail:javax.mail-api")
	testCompile("org.hibernate:hibernate-core")
	testCompile("org.hibernate:hibernate-validator")
	// Enable use of the JUnit Platform Runner
	testCompile("org.junit.platform:junit-platform-runner")
	testCompile("org.junit.jupiter:junit-jupiter-params")
	testCompile("com.fasterxml.jackson.core:jackson-databind")
	testCompile("com.thoughtworks.xstream:xstream")
	testCompile("com.rometools:rome")
	testCompile("org.apache.tiles:tiles-api")
	testCompile("org.apache.tiles:tiles-core")
	testCompile("org.apache.tiles:tiles-servlet")
	testCompile("org.hsqldb:hsqldb")
	testCompile("org.apache.httpcomponents:httpclient") {
		exclude group: "commons-logging", module: "commons-logging"
	}
	testCompile("io.projectreactor.netty:reactor-netty")
	testCompile("de.bechte.junit:junit-hierarchicalcontextrunner")
	// Pull in the latest JUnit 5 Launcher API and the Vintage engine as well
	// so that we can run JUnit 4 tests in IntelliJ IDEA.
	testRuntime("org.junit.jupiter:junit-jupiter-engine")
	testRuntime("org.junit.platform:junit-platform-launcher")
	testRuntime("org.junit.vintage:junit-vintage-engine")
	testRuntime("org.glassfish:javax.el")
	testRuntime("com.sun.xml.bind:jaxb-core")
	testRuntime("com.sun.xml.bind:jaxb-impl")
}

task junit4(type: Test) {
	description = "Runs JUnit 4 tests."
	useJUnit()
	systemProperty("testGroups", project.properties.get("testGroups"))
	scanForTestClasses = false
	include(["**/*Tests.class", "**/*Test.class"])
	exclude(["**/Abstract*.class", "**/testng/**/*.*", "**/jupiter/**/*.*"])
}

task junitJupiter(type: Test) {
	description = "Runs JUnit Jupiter tests."
	useJUnitPlatform {
		includeEngines "junit-jupiter"
		excludeTags "failing-test-case"
	}
	filter {
		includeTestsMatching "org.springframework.test.context.junit.jupiter.*"
	}
	systemProperty("testGroups", project.properties.get("testGroups"))
	// Java Util Logging for the JUnit Platform.
	// systemProperty("java.util.logging.manager", "org.apache.logging.log4j.jul.LogManager")
}

task testNG(type: Test) {
	description = "Runs TestNG tests."
	useTestNG()
	systemProperty("testGroups", project.properties.get("testGroups"))
	scanForTestClasses = false
	include(["**/testng/**/*Tests.class", "**/testng/**/*Test.class"])
	// Show STD_OUT & STD_ERR of the test JVM(s) on the console:
	// testLogging.showStandardStreams = true
	// forkEvery 1
}

test {
	description = "Runs all tests."
	dependsOn junit4, junitJupiter, testNG
	exclude(["**/*.*"])
}

task aggregateTestReports(type: TestReport) {
	description = "Aggregates JUnit and TestNG test reports."
	destinationDir = test.reports.html.destination
	reportOn junit4, junitJupiter, testNG
}

check.dependsOn aggregateTestReports
